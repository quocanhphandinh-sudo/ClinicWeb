// D√°n ƒëo·∫°n m√£ c·∫•u h√¨nh t·ª´ Firebase Console v√†o ƒë√¢y
const firebaseConfig = {
apiKey: "AIzaSyDwwaodTBTwgQbvkP1X1CQyvu2xNXLanvk",
  authDomain: "clinicappweb-d7c1c.firebaseapp.com",
  databaseURL: "https://clinicappweb-d7c1c-default-rtdb.asia-southeast1.firebasedatabase.app",
  projectId: "clinicappweb-d7c1c",
  storageBucket: "clinicappweb-d7c1c.firebasestorage.app",
  messagingSenderId: "578720705506",
  appId: "1:578720705506:web:b171f012fa80fa126b67bb",
  measurementId: "G-YHLCPVK6X6"
};
firebase.initializeApp(firebaseConfig);
const database = firebase.database();

// them vao dau

// H√†m t·∫£i d·ªØ li·ªáu b·ªánh nh√¢n t·ª´ API
async function loadPatientsFromApi() {
  try {
    const snapshot = await database.ref("patients").once("value");
    const patientsObj = snapshot.val() || {};
    const patients = Object.entries(patientsObj).map(([id, p]) => ({ id, ...p }));
    renderPatients(patients);
  } catch (error) {
    console.error("Error loading patients:", error);
  }
}
function renderPatients(patients) {
  const listDiv = document.getElementById("patientsList");
  listDiv.innerHTML = "";
  if (patients.length === 0) {
    listDiv.innerHTML = "<p>Kh√¥ng c√≥ b·ªánh nh√¢n n√†o.</p>";
    return;
  }
  patients.forEach(p => {
    const div = document.createElement("div");
    div.className = "patient-item";
    div.innerHTML = `
      <span><b>${p.FullName}</b> (${p.Phone}) - ${p.DateOfBirth} - ${p.Gender}</span>
      <button class="delete-btn" onclick="deletePatient('${p.id}')">X√≥a</button>
    `;
    listDiv.appendChild(div);
  });
}
async function addPatient(patientData) {
  try {
    const newRef = database.ref("patients").push();
    await newRef.set(patientData);
    alert("Th√™m th√†nh c√¥ng!");
    loadPatientsFromApi();
  } catch (error) {
    console.error("Error adding patient:", error);
  }
}
async function deletePatient(patientId) {
  if (!confirm("B·∫°n c√≥ ch·∫Øc mu·ªën x√≥a?")) return;
  try {
    await database.ref("patients/" + patientId).remove();
    alert("X√≥a th√†nh c√¥ng!");
    loadPatientsFromApi();
  } catch (error) {
    console.error("Error deleting patient:", error);
  }
}
async function searchPatients() {
  const keyword = document.getElementById("searchInput").value.toLowerCase();
  const snapshot = await database.ref("patients").once("value");
  const patientsObj = snapshot.val() || {};
  const patients = Object.entries(patientsObj).map(([id, p]) => ({ id, ...p }));
  const filtered = patients.filter(p =>
    p.FullName.toLowerCase().includes(keyword) ||
    p.Phone.includes(keyword)
  );
  renderPatients(filtered);
}

// H√†m t·∫£i danh s√°ch l·∫ßn kh√°m t·ª´ API
async function toggleVisits(patientId, el) {
  const container = document.getElementById("visits-" + patientId);
  if (container.innerHTML.trim() !== "") {
    container.innerHTML = "";
    return;
  }

  const snapshot = await database.ref("visits/" + patientId).once("value");
  const visitsObj = snapshot.val() || {};
  const visits = Object.entries(visitsObj).map(([id, v]) => ({ id, ...v }));

  if (visits.length === 0) {
    container.innerHTML = "<div class='empty'>(Ch∆∞a c√≥ l·∫ßn kh√°m)</div>";
    return;
  }

  let html = "<ul>";
  visits.forEach(visit => {
    html += `<li class="visit-item" onclick="showVisitDetail('${visit.id}', this)">
      üìÖ ${visit.VisitDate} ‚Äì ${visit.Diagnosis||""}
    </li>`;
  });
  html += "</ul>";
  container.innerHTML = html;
}

// H√†m hi·ªÉn th·ªã chi ti·∫øt l·∫ßn kh√°m t·ª´ API
async function showVisitDetail(visitId, el) {
  document.querySelectorAll(".visit-item").forEach(li => li.classList.remove("active-visit"));
  if (el) el.classList.add("active-visit");

  try {
    const response = await fetch(`${API_URL}/visitdetails/${visitId}`);
    if (!response.ok) {
      throw new Error('Failed to fetch visit details from server');
    }
    const details = await response.json(); // L·∫•y chi ti·∫øt kh√°m b·ªánh

    if (!details || details.length === 0) {
      document.getElementById("visitDetail").innerHTML = "<p>Kh√¥ng c√≥ d·ªØ li·ªáu</p>";
      return;
    }

    const rows = details;
    let html = `<h3>L·∫ßn kh√°m ng√†y ${rows[0].VisitDate}</h3>
                 <p><b>Ch·∫©n ƒëo√°n:</b> ${rows[0].Diagnosis||""}</p>
                 <p><b>Tri·ªáu ch·ª©ng:</b> ${rows[0].Symptoms||""}</p>
                 <p><b>Ghi ch√∫ ƒë∆°n thu·ªëc:</b> ${rows[0].PrescriptionNotes||""}</p>
                 <p><b>Ph√≠ kh√°m:</b> ${rows[0].PriceFee||0}‚Ç´ (${rows[0].NameFee||""})</p>
                 <p><b>T·ªïng ti·ªÅn thu·ªëc:</b> ${rows[0].MedicationsTotal||0}‚Ç´</p>
                 <p><b>T·ªïng c·ªông:</b> ${rows[0].TotalAmount||0}‚Ç´</p>`;
    
    html += "<h4>ƒê∆°n thu·ªëc</h4><table><tr><th>Thu·ªëc</th><th>Ho·∫°t ch·∫•t</th><th>D·∫°ng</th><th>Li·ªÅu</th><th>S·ªë l∆∞·ª£ng</th><th>Gi√° xu·∫•t</th><th>H∆∞·ªõng d·∫´n</th></tr>";
    rows.forEach(r => {
      html += `<tr>
        <td>${r.Medication||""}</td>
        <td>${r.ActiveIngredient||""}</td>
        <td>${r.Format||""}</td>
        <td>${r.Dosage||""}</td>
        <td>${r.Quantity||""}</td>
        <td>${r.PriceAtDispense||""}</td>
        <td>${r.Instruction||""}</td>
      </tr>`;
    });
    html += "</table>";
    document.getElementById("visitDetail").innerHTML = html;

  } catch (error) {
    console.error("Error fetching visit details:", error);
    document.getElementById("visitDetail").innerHTML = "<p>L·ªói: Kh√¥ng th·ªÉ t·∫£i chi ti·∫øt l·∫ßn kh√°m.</p>";
  }
}



// T√¨m ki·∫øm b·ªánh nh√¢n
document.getElementById("searchBox").addEventListener("input", (e) => {
  // Logic t√¨m ki·∫øm c·∫ßn ƒë∆∞·ª£c x·ª≠ l√Ω tr√™n server, n√™n b·∫°n c·∫ßn t·∫°o m·ªôt API t√¨m ki·∫øm
  // V√≠ d·ª•: GET /api/patients?filter=...
  // Hi·ªán t·∫°i, t·∫°m th·ªùi b·ªè qua ph·∫ßn n√†y
});
